int = { ("+" | "-")? ~ ASCII_DIGIT+ }
float = @{ int ~ "." ~ ASCII_DIGIT* }
ident = @{ !null ~ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC|"_")* }
function_call = ${ ident ~ args }
	args = !{"("~expression_list~")"}
var = _{ float | int | array | string | null | function }
expression = _{ function_call | ident | var }
expression_list = _{ (expression ~ ("," ~ expression)*)?}
array = {"{" ~ expression_list ~ "}"}
string = ${ "\"" ~ inner ~ "\"" }
  inner = @{ char* }
  char = {
      !("\"" | "\\") ~ ANY
      | "\\" ~ ("\"" | "\\" | "b" | "f" | "n" | "r" | "t")
      | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
  }
null = {"NULL"}
set = { return_variable ~ "=" ~ expression }
line = { COMMENT* ~ (set | expression) ~  line_end }
	line_end = { ";" }
return_variable = @{ident}
function = {params~"{"~line*~"}"}
	param = {ident ~ ":" ~ type}
	params_list = _{ (param ~ ("," ~ param)*)?}
    params = {"(" ~ params_list? ~ ")"}
type = _{int_type | float_type | string_type | null_type | function_type | array_type | any}
  int_type = {"int"}
  float_type = {"float"}
  string_type = {"string"}
  null_type = {"null"}
  function_type = {"function" ~ function_type_params? ~ ("->" ~ type)?}
    function_type_params = {"(" ~ (type ~ ("," ~ type)*)? ~ ")"}
  array_type = {"array"}
  any = {"any"}
input = _{ line* ~ EOI}
block_comment = _{"/*" ~ (!"*/" ~ ANY)* ~ "*/"}
line_comment = _{"//"~(!NEWLINE ~ ANY)*}
COMMENT = _{block_comment|line_comment}
WHITESPACE = _{ " " | "\t"| NEWLINE }